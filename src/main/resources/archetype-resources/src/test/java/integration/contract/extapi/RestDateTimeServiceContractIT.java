package ${package}.integration.contract.extapi;

import static org.assertj.core.api.Assertions.assertThat;

import ${package}.${mainSpringClassName};
import ${package}.autogenerated.dto.RestDateTimeServiceResponseDto;
import ${package}.extapi.RestDateTimeClient;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.context.SpringBootTest.WebEnvironment;
import org.springframework.cloud.contract.stubrunner.spring.AutoConfigureStubRunner;
import org.springframework.cloud.contract.stubrunner.spring.StubRunnerProperties.StubsMode;
import org.springframework.test.annotation.DirtiesContext;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.context.junit4.SpringRunner;


@RunWith(SpringRunner.class)
@AutoConfigureStubRunner(ids = "com.example:rest-date-time:0.1.0:stubs:8099", stubsMode = StubsMode.LOCAL)
@SpringBootTest(classes = ${mainSpringClassName}.class, webEnvironment = WebEnvironment.MOCK, properties = { "service.rest-date-time.url=http://localhost:8099" })
@DirtiesContext
@ActiveProfiles({"mock"})
public class RestDateTimeServiceContractIT {

    @Autowired
    private RestDateTimeClient client;

    @Test
    public void testRestDateTimeExternalApi() throws Exception {
        RestDateTimeServiceResponseDto response = client.getDateTime();

        assertThat(response).isNotNull();
        // Date specified in contract of rest-date-time
        assertThat(response.getDateTime()).isEqualTo("2020-12-12T10:00:00.000");
    }

}
